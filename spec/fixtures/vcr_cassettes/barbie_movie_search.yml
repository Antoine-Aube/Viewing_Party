---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Oct 2023 03:22:47 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23011
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '612'
      X-Memc-Expires:
      - '27082'
      Etag:
      - W/"5bfec3f68c654a7bbf1f25eeec78716b"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 784c61a450d9d48ba54eb73f4a51e6da.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - BNUMFOwLfUNW-noUV_-P_2h2ibPg18-w0Mj6JtwRwLpgrWzEFmrP7w==
      Age:
      - '2417'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Oct 2023 04:03:04 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Oct 2023 03:22:47 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23011
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '612'
      X-Memc-Expires:
      - '27082'
      Etag:
      - W/"5bfec3f68c654a7bbf1f25eeec78716b"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 dc6b456d2b062aa3de2642bc312fc394.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - bYhMa9IlNAFmP4A5N5NdDPCtDJTXRnvVhANbRpjQn2E7hKKWazO-cw==
      Age:
      - '2417'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Oct 2023 04:03:04 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Oct 2023 03:22:47 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23011
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '612'
      X-Memc-Expires:
      - '27082'
      Etag:
      - W/"5bfec3f68c654a7bbf1f25eeec78716b"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6fd49f86f210f7efc9603d6f872dd0cc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - IajV0i8r5TCQHJhtiw9YYLAK1MNHim9O25qb5Jff5GWuDW69Ra_Ndw==
      Age:
      - '2417'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvY3RNc2VySDhnMlNlT0FuQ3c1Z0ZqZFFGOG1vLmpwZyIsImdlbnJlX2lkcyI6WzM1LDEyLDE0XSwiaWQiOjM0NjY5OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIiwib3ZlcnZpZXciOiJCYXJiaWUgYW5kIEtlbiBhcmUgaGF2aW5nIHRoZSB0aW1lIG9mIHRoZWlyIGxpdmVzIGluIHRoZSBjb2xvcmZ1bCBhbmQgc2VlbWluZ2x5IHBlcmZlY3Qgd29ybGQgb2YgQmFyYmllIExhbmQuIEhvd2V2ZXIsIHdoZW4gdGhleSBnZXQgYSBjaGFuY2UgdG8gZ28gdG8gdGhlIHJlYWwgd29ybGQsIHRoZXkgc29vbiBkaXNjb3ZlciB0aGUgam95cyBhbmQgcGVyaWxzIG9mIGxpdmluZyBhbW9uZyBodW1hbnMuIiwicG9wdWxhcml0eSI6NzM1LjM4NSwicG9zdGVyX3BhdGgiOiIvaXVGTk1TOFU1Y2I2eGZ6aTUxRGJrb3ZqN3ZNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjMtMDctMTkiLCJ0aXRsZSI6IkJhcmJpZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIyMiwidm90ZV9jb3VudCI6NTYzOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjYxNzkzMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIiwib3ZlcnZpZXciOiJCYXJiaWUgY29tZXMgaG9tZSBmcm9tIHNob3BwaW5nLiBTaGUgdGFrZXMgaGVyIGdyb2NlcmllcyBvdXQgb2YgdGhlIGJhZyBhbmQgdW53cmFwcyBhIGxpdHRsZSBCYXJiaWUgZG9sbC4gU2hlIGZyaWVzIHVwIHRoZSBCYXJiaWUgZG9sbCBhbmQgZWF0cyBpdC4iLCJwb3B1bGFyaXR5IjoyLjU3OSwicG9zdGVyX3BhdGgiOiIvQTFOdmRkb3F5QmphSWZFSERhZmZJSkZHeGNNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzctMDEtMDEiLCJ0aXRsZSI6IkJhcmJpZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjcsInZvdGVfY291bnQiOjIyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii92NXhYVHBmTVQ1TnBqUWVETU5ZTkxmbGFpdUEuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTMwMDIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBpbiB0aGUgMTIgRGFuY2luZyBQcmluY2Vzc2VzIiwib3ZlcnZpZXciOiJLaW5nIFJhbmRvbHBoIHNlbmRzIGZvciBoaXMgY291c2luLCBEdWNoZXNzIFJvd2VuYSwgdG8gaGVscCB0dXJuIGhpcyBkYXVnaHRlcnMsIFByaW5jZXNzIEdlbmV2aWV2ZSBhbmQgaGVyIGVsZXZlbiBzaXN0ZXJzLCBpbnRvIHJveWFsIG1hdGVyaWFsLiBCdXQgdGhlIER1Y2hlc3Mgc3RyaXBzIHRoZSBzaXN0ZXJzIG9mIHRoZWlyIGZ1biwgaW5jbHVkaW5nIHRoZWlyIGZhdm9yaXRlIHBhc3RpbWU6IGRhbmNpbmcuIFdoZW4gYWxsIGhvcGUgbWF5IGJlIGxvc3QsIHRoZSBzaXN0ZXJzIGRpc2NvdmVyIGEgc2VjcmV0IHBhc3NhZ2V3YXkgdG8gYSBtYWdpY2FsIGxhbmQgd2hlcmUgdGhleSBjYW4gZGFuY2UgdGhlIG5pZ2h0IGF3YXkuIiwicG9wdWxhcml0eSI6MzkuNjcyLCJwb3N0ZXJfcGF0aCI6Ii95QkI3UHdYUkZKMjlVOG04U25UY1dWaXpGdk0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwNi0wOS0xOSIsInRpdGxlIjoiQmFyYmllIGluIFRoZSAxMiBEYW5jaW5nIFByaW5jZXNzZXMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42NTQsInZvdGVfY291bnQiOjEwNjl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL1FBTDZaSTJtTEVYaUlVR2hHWWQxZll1ajlRLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjE2NDE4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgUHJlc2VudHM6IFRodW1iZWxpbmEiLCJvdmVydmlldyI6Ik1lZXQgYSB0aW55IGdpcmwgbmFtZWQgVGh1bWJlbGluYSB3aG8gbGl2ZXMgaW4gaGFybW9ueSB3aXRoIG5hdHVyZSBpbiB0aGUgbWFnaWNhbCB3b3JsZCBvZiB0aGUgVHdpbGxlcmJlZXMgdGhhdCdzIGhpZGRlbiBhbW9uZyB0aGUgd2lsZGZsb3dlcnMuIEF0IHRoZSB3aGltIG9mIGEgc3BvaWxlZCB5b3VuZyBnaXJsIG5hbWVkIE1ha2VuYSwgVGh1bWJlbGluYSBhbmQgaGVyIHR3byBmcmllbmRzIGhhdmUgdGhlaXIgcGF0Y2ggb2Ygd2lsZGZsb3dlcnMgdXByb290ZWQgYW5kIGFyZSB0cmFuc3BvcnRlZCB0byBhIGxhdmlzaCBhcGFydG1lbnQgaW4gdGhlIGNpdHkuIiwicG9wdWxhcml0eSI6MjIuMzkyLCJwb3N0ZXJfcGF0aCI6Ii95dEtkMmpXbnpXTENpY2N1dHFxTU56Y1A1UkUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOS0wMi0yNCIsInRpdGxlIjoiQmFyYmllIFByZXNlbnRzOiBUaHVtYmVsaW5hIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNjE2LCJ2b3RlX2NvdW50Ijo0NTR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hidkNaMTJIaUM2RHg0bWJnZVVyN2FIQklQUC5qcGciLCJnZW5yZV9pZHMiOlsxNiwxMDc1MSwxMiwxNF0sImlkIjoxMzI4NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIEZhaXJ5dG9waWE6IE1lcm1haWRpYSIsIm92ZXJ2aWV3IjoiSW4gdGhpcyBhbmltYXRlZCBmb2xsb3ctdXAgdG8gRmFpcnl0b3BpYSwgRWxpbmEgZW5saXN0cyB0aGUgaGVscCBvZiBhIG1lcm1haWQsIE5vcmksIHRvIHNhdmUgaGVyIGZyaWVuZCBOYWx1LCBhIG1lcm1hbiBwcmluY2Ugd2hvIGhhcyBiZWVuIGNhcHR1cmVkIGJ5IHRoZSB3aWNrZWQgTGF2ZXJuYS4iLCJwb3B1bGFyaXR5IjozMC4xMTYsInBvc3Rlcl9wYXRoIjoiL2lnc3FTN3JwbmtBVDkySXFvNXNZd1RzMUtXby5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTAzLTE0IiwidGl0bGUiOiJCYXJiaWU6IEZhaXJ5dG9waWEgLSBNZXJtYWlkaWEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni44NTUsInZvdGVfY291bnQiOjY0NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvamhpZ0hwb3hMRHhwalVVdUJPQ1ZtQW84bnRiLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjEzNDU5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgaW4gJ0EgQ2hyaXN0bWFzIENhcm9sJyIsIm92ZXJ2aWV3IjoiT24gQ2hyaXN0bWFzIEV2ZSwgS2VsbHkgaXMgcmVsdWN0YW50IHRvIGdvIHRvIGEgQ2hyaXN0bWFzIEV2ZSBiYWxsLCBzbyBCYXJiaWUgdGVsbHMgaGVyIHRoZSBzdG9yeSBvZiBFZGVuIFN0YXJsaW5nLCBhIGdsYW1vcm91cyBzaW5naW5nIGRpdmEgaW4gdGhlIFZpY3RvcmlhbiBFbmdsYW5kIGFuZCB0aGUgb3duZXIgb2YgYSB0aGVhdHJlIGhvdXNlLiBIb3dldmVyLCBFZGVuIGlzIHNlbGYtY2VudGVyZWQgYW5kIGxvdmVzIG9ubHkgaGVyc2VsZi4gU2hlIGlzIGZyZXF1ZW50bHkgYWNjb21wYW5pZWQgYnkgaGVyIHNub290eSBjYXQsIENodXp6bGV3aXQuIFNoZSBkb2VzIG5vdCBiZWxpZXZlIGluIENocmlzdG1hcyBhbmQgb3JkZXJzIGFsbCBoZXIgZW1wbG95ZWVzIHRvIHdvcmsgb24gQ2hyaXN0bWFzLiIsInBvcHVsYXJpdHkiOjI4LjAyMSwicG9zdGVyX3BhdGgiOiIvZlg5ZzFBRTFKSXFqWDNMUFBLVmpjbUhzNmZkLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMTEtMDMiLCJ0aXRsZSI6IkJhcmJpZSBpbiBBIENocmlzdG1hcyBDYXJvbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjAzOCwidm90ZV9jb3VudCI6NDk3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9iVFU2NHhMNHVUb1RqUVp3SUNQWnpNYjR5WnQuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTYsMTA3NTFdLCJpZCI6Mzc3ODk3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWU6IFNweSBTcXVhZCIsIm92ZXJ2aWV3IjoiQmFyYmllIGFuZCBoZXIgYmVzdCBmcmllbmRzIFRlcmVzYSBhbmQgUmVuZWUgdHJhbnNmb3JtIGZyb20gaGFyZC13b3JraW5nIGd5bW5hc3RzIHRvIHVuZGVyY292ZXIgc2VjcmV0IGFnZW50cy4gV2hlbiB0aGVpciBhbWF6aW5nIGd5bW5hc3RpY3Mgc2tpbGxzIGNhdGNoIHRoZSBleWUgb2YgYSB0b3Atc2VjcmV0IHNweSBhZ2VuY3ksIHRoZSBnaXJscyBhcmUgc29vbiBmb2xsb3dpbmcgY2x1ZXMgdG8gYSBnZW0tc3RlYWxpbmcgY2F0IGJ1cmdsYXIsIHVzaW5nIGhpZ2gtdGVjaCBnYWRnZXRzLCBnbGFtIGRpc2d1aXNlcyBhbmQgY3V0ZSByb2JvLXBldHMgdG8gc2F2ZSB0aGUgZGF5LiIsInBvcHVsYXJpdHkiOjI1LjY0NCwicG9zdGVyX3BhdGgiOiIvdXhkdkpIRTVWODQ0ZFRsSzJFbXFSUUNUWURiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDEtMTUiLCJ0aXRsZSI6IkJhcmJpZTogU3B5IFNxdWFkIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOTQ3LCJ2b3RlX2NvdW50IjozNjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNoWGZwb01qY1FxaFNSaXBkT0J6TUN1bk1hUi5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNl0sImlkIjozNDM5NDgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlNpbmcgQWxvbmcgd2l0aCBCYXJiaWUiLCJvdmVydmlldyI6IlNpbmcsIGRhbmNlIGFuZCBkcmVhbSB3aXRoIEJhcmJpZSBhbmQgZnJpZW5kcyBpbiBoZXIgdmVyeSBmaXJzdCBjb2xsZWN0aW9uIG9mIHNpbmctYWxvbmcgc29uZ3MgZnJvbSBCYXJiaWUgRW50ZXJ0YWlubWVudC4gRWFzeS10by1mb2xsb3csIG9uLXNjcmVlbiBseXJpY3MgbGV0IHlvdSBwZXJmb3JtIHlvdXIgZmF2b3JpdGUgQmFyYmllIHNvbmdzIGxpa2UgbmV2ZXIgYmVmb3JlLiBSZWxpdmUgdGhlIGFkdmVudHVyZSBhbmQgbWFnaWMgZnJvbSBjbGFzc2ljIEJhcmJpZSBtb3ZpZSBtb21lbnRzIHRocm91Z2ggdHdlbHZlIG1lbW9yYWJsZSBtZWxvZGllcy4iLCJwb3B1bGFyaXR5Ijo3MS40ODQsInBvc3Rlcl9wYXRoIjoiL3hYbldiQUJxbTdwRUhTNGhDZG04QVk3RmNpSy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA5LTExLTEwIiwidGl0bGUiOiJTaW5nIEFsb25nIHdpdGggQmFyYmllIiwidmlkZW8iOnRydWUsInZvdGVfYXZlcmFnZSI6Ny4wLCJ2b3RlX2NvdW50Ijo4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii94eEp6NlVUQVA4SUZlemhnbER0emNmSzdyVHAuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTZdLCJpZCI6MTE2NTIyMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTXkgRmlyc3QgQmFyYmllOiBIYXBweSBEcmVhbURheSIsIm92ZXJ2aWV3IjoiU2luZyBhbG9uZyB3aXRoIEJhcmJpZSwgQmFyYmllLCBUZXJlc2EsIGFuZCBSZW5lZSBpbiB0aGlzIG11c2ljYWwgYWR2ZW50dXJlIGFzIHRoZXkgcGxhbiB0aGUgYmlnZ2VzdCBzdXJwcmlzZSBiaXJ0aGRheSBwYXJ0eSBldmVyIGZvciBCYXJiaWXigJlzIHNpc3RlciwgQ2hlbHNlYS4iLCJwb3B1bGFyaXR5IjoxMTkuMzc0LCJwb3N0ZXJfcGF0aCI6Ii96VUdEbzlsdVRJeWlWZlBWRW1LR2E1NXBJSmEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMy0wMi0xMyIsInRpdGxlIjoiTXkgRmlyc3QgQmFyYmllOiBIYXBweSBEcmVhbURheSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjEzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83Ym85UThIaU1ZTjhQOUVVM3NkYmtTdUNzTEQuanBnIiwiZ2VucmVfaWRzIjpbMzUsMTA3NDldLCJpZCI6MzQ1NjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBTaHJpbXAgb24gdGhlIEJhcmJpZSIsIm92ZXJ2aWV3IjoiQ2FybG9zIGhhcyBmYWlsZWQgaW4gc2hvdy1iaXogYW5kIGN1cnJlbnRseSB3b3JrcyBhcyBhIHdhaXRlciBpbiBhIE1leGljYW4gcmVzdGF1cmFudC4gVGhlcmUgaGUgbWVldHMgQWxleCBhbmQgZHVtYiBmb290YmFsbGVyIEJydWNlIGNlbGVicmF0aW5nIHRoZWlyIGVuZ2FnZW1lbnQgd2l0aCBoZXIgcGFyZW50cy4gQWxleCcgZmF0aGVyIGlzIGxlc3MgdGhhbiB0aHJpbGxlZCBvZiBoZXIgZmlhbmPDqWUgYW5kIHNheXMgaGUnZCByYXRoZXIgYWNjZXB0IGFueWJvZHkgZWxzZS4gRXZlbnR1YWxseSBBbGV4IGhpcmVzIENhcmxvcyB0byBwcmVzZW50IGhpbSBhcyBoZXIgbmV3IGZpYW5jw6llLiIsInBvcHVsYXJpdHkiOjQuMTg2LCJwb3N0ZXJfcGF0aCI6Ii84VW5XSnNzMzd3VkxUVmo0ZlR6S3l2M01yYnAuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5MC0wOC0zMSIsInRpdGxlIjoiVGhlIFNocmltcCBvbiB0aGUgQmFyYmllIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMjA3LCJ2b3RlX2NvdW50IjoyN30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaWpmUHUxSWFEankxUFBVTWg1N1BpaEhsUllmLmpwZyIsImdlbnJlX2lkcyI6WzEwNzcwLDE2LDEwNDAyLDEyLDg3OF0sImlkIjoxOTg4ODQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhbmQgVGhlIFNlbnNhdGlvbnM6IFJvY2tpbicgQmFjayB0byBFYXJ0aCIsIm92ZXJ2aWV3IjoiRm9sbG93aW5nIHRoZWlyIGNvbmNlcnQgZm9yIHdvcmxkIHBlYWNlIGluIG91dGVyIHNwYWNlLCBCYXJiaWUgYW5kIGhlciBiYW5kIHRoZSBSb2NrZXJzIGFyZSBnb2luZyBiYWNrIGhvbWUuIER1cmluZyB0aGUgdHJpcCBiYWNrIHRvIEVhcnRoLCB0aGUgYmFuZCdzIHNwYWNlIHNodXR0bGUgaW5hZHZlcnRlbnRseSBlbnRlcnMgYSB0aW1lIHdhcnAuIFVwb24gbGFuZGluZyBhdCBhbiBhaXJwb3J0LCB0aGV5IG1lZXQgRHIuIE1lcnJpaGV3IGFuZCBoaXMgZGF1Z2h0ZXIgS2ltIGFuZCBzb29uIGxlYXJuIHRoYXQgdGhleSBoYXZlIGJlZW4gdHJhbnNwb3J0ZWQgYmFjayB0byAxOTU5LiBUaGUgYmFuZCB0aGVuIGRlY2lkZXMgdG8gZ28gb24gYSB0b3VyIGFyb3VuZCB0aGUgY2l0eSBhbG9uZ3NpZGUgS2ltLiBBZnRlciBhIHBlcmZvcm1hbmNlIGF0IENhcGUgQ2FuYXZlcmFsLCBEci4gTWVycmloZXcgaGVscHMgQmFyYmllIGFuZCB0aGUgUm9ja2VycyByZXR1cm4gdG8gdGhlaXIgdGltZS4gQmFjayBpbiB0aGUgcHJlc2VudCwgdGhleSBzdGFnZSBhIGJpZyBjb25jZXJ0IGluIE5ldyBZb3JrIENpdHksIHdoZXJlIEJhcmJpZSBpcyByZXVuaXRlZCB3aXRoIGFuIGFkdWx0IEtpbSBhbmQgaW50cm9kdWNlZCB0byBoZXIgZGF1Z2h0ZXIgTWVnYW4uIiwicG9wdWxhcml0eSI6MS45NDIsInBvc3Rlcl9wYXRoIjoiL3ZVQ3F2eW14VXdZeHA5SDZqdzVSNVVpYWVFNS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTg3LTAxLTAxIiwidGl0bGUiOiJCYXJiaWUgYW5kIHRoZSBTZW5zYXRpb25zOiBSb2NraW4nIEJhY2sgdG8gRWFydGgiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42NDYsInZvdGVfY291bnQiOjI0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9pdTJ5STlhb2haNkVublU0MmRMUUZkY2VwdVouanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTEsMzVdLCJpZCI6MTUxNjUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhcyBUaGUgUHJpbmNlc3MgXHUwMDI2IHRoZSBQYXVwZXIiLCJvdmVydmlldyI6IkluIGhlciBmaXJzdCBhbmltYXRlZCBtdXNpY2FsIGZlYXR1cmluZyBzZXZlbiBvcmlnaW5hbCBzb25ncywgQmFyYmllIGNvbWVzIHRvIGxpZmUgaW4gdGhpcyBtb2Rlcm4gcmUtdGVsbGluZyBvZiBhIGNsYXNzaWMgdGFsZSBvZiBtaXN0YWtlbiBpZGVudGl0eSBhbmQgdGhlIHBvd2VyIG9mIGZyaWVuZHNoaXAuIEJhc2VkIG9uIHRoZSBzdG9yeSBieSBNYXJrIFR3YWluLiIsInBvcHVsYXJpdHkiOjM4LjcyOCwicG9zdGVyX3BhdGgiOiIveEhZc1V3VWU0TWFOYzZtYk5CR1RrcVpTblBrLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDQtMDktMjgiLCJ0aXRsZSI6IkJhcmJpZSBhcyBUaGUgUHJpbmNlc3MgXHUwMDI2IHRoZSBQYXVwZXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny40OSwidm90ZV9jb3VudCI6MTM3MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcFI1MXRXSGxVV1VFblBVYzVteTlhbnFjRHRvLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE2LDE0XSwiaWQiOjczNDU2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWU6IFByaW5jZXNzIENoYXJtIFNjaG9vbCIsIm92ZXJ2aWV3IjoiQmFyYmllIHN0YXJzIGFzIEJsYWlyIFdpbGxvd3MsIGEga2luZC1oZWFydGVkIGdpcmwgd2hvIGlzIGNob3NlbiB0byBhdHRlbmQgUHJpbmNlc3MgQ2hhcm0gU2Nob29sOiBhIG1hZ2ljYWwsIG1vZGVybiBwbGFjZSB0aGF0IHRlYWNoZXMgZGFuY2luZywgaG93IHRvIGhhdmUgdGVhIHBhcnRpZXMsIGFuZCBwcm9wZXIgcHJpbmNlc3MgbWFubmVycy4gQmxhaXIgbG92ZXMgaGVyIGNsYXNzZXMgLS0gYXMgd2VsbCBhcyB0aGUgaGVscGZ1bCBtYWdpY2FsIHNwcml0ZXMgYW5kIGhlciBuZXcgZnJpZW5kcywgUHJpbmNlc3NlcyBIYWRsZXkgYW5kIElzbGEuIEJ1dCB3aGVuIHJveWFsIHRlYWNoZXIgRGFtZSBEZXZpbiBkaXNjb3ZlcnMgdGhhdCBCbGFpciBsb29rcyBhIGxvdCBsaWtlIHRoZSBraW5nZG9t4oCZcyBtaXNzaW5nIHByaW5jZXNzLCBzaGUgdHVybnMgQmxhaXLigJlzIHdvcmxkIHVwc2lkZSBkb3duIHRvIHN0b3AgaGVyIGZyb20gY2xhaW1pbmcgdGhlIHRocm9uZS4gTm93IEJsYWlyLCBIYWRsZXkgYW5kIERlbGFuY3kgbXVzdCBmaW5kIGFuIGVuY2hhbnRlZCBjcm93biB0byBwcm92ZSBCbGFpcuKAmXMgdHJ1ZSBpZGVudGl0eSBpbiB0aGlzIGNoYXJtaW5nIGFuZCBtYWdpY2FsIHByaW5jZXNzIHN0b3J5ISIsInBvcHVsYXJpdHkiOjM4LjUyLCJwb3N0ZXJfcGF0aCI6Ii9sSTJqUGJzc2F4NlhYNXZEcUI5bVRKSEd6ZkguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMS0wOC0xMSIsInRpdGxlIjoiQmFyYmllOiBQcmluY2VzcyBDaGFybSBTY2hvb2wiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny40NDksInZvdGVfY291bnQiOjcxOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjoxMTYxOTk3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCZWxhcyBCYXJiaWVzIiwib3ZlcnZpZXciOiJBIHF1aWNrIGludHJvIHRvIGhvdyBkb2VzIHN0dWRlbnQgbGlmZSBpbiBCZWxhcyBBcnRlcyBvZiBTw6NvIFBhdWxvIHdvcmtzLiBNYWRlIGZvciB0aGUgZnJlc2htZW4ncyBmaXJzdCB3ZWVrIGJ5IHRoZWlyIHNlbmlvcnMuIiwicG9wdWxhcml0eSI6MS42NTEsInBvc3Rlcl9wYXRoIjoiL2ZqVnJIVkhDN0dKT1F1MGduSVNUZGxyY0I2Ni5qcGciLCJyZWxlYXNlX2RhdGUiOiIiLCJ0aXRsZSI6IkJlYXV0aWZ1bCBCYXJiaWVzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguNCwidm90ZV9jb3VudCI6NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdG9ucnVsVG1POVp5Wm1zQXNyNXlyOWNpRTRjLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjE1MDE2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgb2YgU3dhbiBMYWtlIiwib3ZlcnZpZXciOiJCYXJiaWUgYXMgT2RldHRlLCB0aGUgeW91bmcgZGF1Z2h0ZXIgb2YgYSBiYWtlciwgZm9sbG93cyBhIHVuaWNvcm4gaW50byB0aGUgRW5jaGFudGVkIEZvcmVzdCBhbmQgaXMgdHJhbnNmb3JtZWQgaW50byBhIHN3YW4gYnkgYW4gZXZpbCB3aXphcmQgaW50ZW50IG9uIGRlZmVhdGluZyB0aGUgRmFpcnkgUXVlZW4uIiwicG9wdWxhcml0eSI6MjkuNzE3LCJwb3N0ZXJfcGF0aCI6Ii9zTHBDTFZRV1RVN0JJNHlBTDZrSUZNOUozZVguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMy0wOS0yNyIsInRpdGxlIjoiQmFyYmllIG9mIFN3YW4gTGFrZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2Ljk4NCwidm90ZV9jb3VudCI6MTAyN30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvYnVkdlVKZFNOS1Z6RWtOZG9oNHFhNHI3VmoxLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjE1MTY3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgaW4gdGhlIE51dGNyYWNrZXIiLCJvdmVydmlldyI6IlwiQmFyYmllXCIgc3RhcnMgYXMgQ2xhcmEgaW4gdGhpcyBhbmltYXRlZCByZXRlbGxpbmcgb2YgdGhlIGNsYXNzaWMgQ2hyaXN0bWFzIGJhbGxldCwgY29tcGxldGUgd2l0aCBUY2hhaWtvdnNreSBzb3VuZHRyYWNrIGFuZCBiYWxsZXQgY2hvcmVvZ3JhcGh5LiIsInBvcHVsYXJpdHkiOjI3Ljk0NywicG9zdGVyX3BhdGgiOiIvZUlrWEpnZ1Ztek40TXlQZ0oya0RqT3k5bG1RLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDEtMDktMzAiLCJ0aXRsZSI6IkJhcmJpZSBpbiB0aGUgTnV0Y3JhY2tlciIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjgyMSwidm90ZV9jb3VudCI6OTc3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9rSHhudnJYYVdEaU9zdmpSN282cVl1MTVwN0guanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTUwMTUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhcyBSYXB1bnplbCIsIm92ZXJ2aWV3IjoiTG9uZywgbG9uZyBhZ28sIGluIGEgdGltZSBvZiBtYWdpYyBhbmQgZHJhZ29ucywgdGhlcmUgbGl2ZWQgYSBnaXJsIG5hbWVkIFJhcHVuemVsIHdobyBoYWQgdGhlIG1vc3QgYmVhdXRpZnVsIHJhZGlhbnQgaGFpciB0aGUgd29ybGQgaGFkIGV2ZXIgc2Vlbi4gQnV0IFJhcHVuemVsJ3MgbGlmZSB3YXMgZmFyIGZyb20gd29uZGVyZnVsLiBTaGUgbGl2ZWQgYXMgYSBzZXJ2YW50IHRvIEdvdGhlbCwgYSBqZWFsb3VzLCBzY2hlbWluZyB3aXRjaCB3aG8ga2VwdCBoZXIgaGlkZGVuIGRlZXAgaW4gYSBmb3JiaWRkaW5nIGZvcmVzdCwgZ3VhcmRlZCBieSB0aGUgZW5vcm1vdXMgZHJhZ29uIEh1Z28gYW5kIHN1cnJvdW5kZWQgYnkgYW4gZW5jaGFudGVkIGdsYXNzIHdhbGwuIEhvd2V2ZXIsIGluIGEgdHdpc3Qgb2YgZmF0ZSwgUmFwdW56ZWwncyBkaXNjb3Zlcnkgb2YgYSBtYWdpYyBwYWludGJydXNoIGxlYWRzIGhlciBvbiBhIGpvdXJuZXkgdGhhdCB3aWxsIHVucmF2ZWwgYSB3ZWIgb2YgZGVjZXB0aW9uLCBicmluZyBwZWFjZSB0byB0d28gZmV1ZGluZyBraW5nZG9tcywgYW5kIHVsdGltYXRlbHkgbGVhZCBoZXIgdG8gbG92ZSB3aXRoIHRoZSBoZWxwIG9mIFBlbmVsb3BlKFRNKSwgdGhlIGxlYXN0IGludGltaWRhdGluZyBvZiBkcmFnb25zISIsInBvcHVsYXJpdHkiOjI2Ljc4NywicG9zdGVyX3BhdGgiOiIveXNpR3p1TVNjMG5GbW1EUG45ejdVN1lTRllmLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDItMTAtMDEiLCJ0aXRsZSI6IkJhcmJpZSBhcyBSYXB1bnplbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjAxLCJ2b3RlX2NvdW50IjoxMTU3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9tenNVV2dtZmwzcFlRRVEyTVZMVGY0dHRIMjYuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTMyODMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhcyB0aGUgSXNsYW5kIFByaW5jZXNzIiwib3ZlcnZpZXciOiJTaGlwd3JlY2tlZCBhcyBhIGNoaWxkLCBSb3NlbGxhIChCYXJiaWUpIGdyb3dzIHVwIG9uIHRoZSBpc2xhbmQgdW5kZXIgdGhlIHdhdGNoZnVsIGV5ZXMgb2YgaGVyIGxvdmluZyBhbmltYWwgZnJpZW5kcy4gVGhlIGFycml2YWwgb2YgUHJpbmNlIEFudG9uaW8gbGVhZHMgUm9zZWxsYSBhbmQgaGVyIGZ1cnJ5IHBhbHMgdG8gZXhwbG9yZSBjaXZpbGl6YXRpb24gYW5kIHVsdGltYXRlbHkgc2F2ZSB0aGUga2luZ2RvbSBieSB1bmNvdmVyaW5nIGEgc2VjcmV0IHBsb3QuIiwicG9wdWxhcml0eSI6MjYuODQzLCJwb3N0ZXJfcGF0aCI6Ii9vZ3VSUFVGZUh0MEgwd08wSGU0ZXdUc2VNWG8uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwNy0wOS0xNyIsInRpdGxlIjoiQmFyYmllIGFzIHRoZSBJc2xhbmQgUHJpbmNlc3MiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4yMTMsInZvdGVfY291bnQiOjY1Nn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbEZOQUR5MWVsTkhwVXhNTDQxTWk3SlJzdGV5LmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxLDE0XSwiaWQiOjM0MTM0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgaW4gQSBNZXJtYWlkIFRhbGUiLCJvdmVydmlldyI6IkJhcmJpZSBzdGFycyBhcyBNZXJsaWFoLCBhIHN1cmZlciB3aG8gbGVhcm5zIGEgc2hvY2tpbmcgc2VjcmV0OiBzaGUncyBhIG1lcm1haWQhIFNoZSBhbmQgaGVyIGRvbHBoaW4gZnJpZW5kIHNldCBvdXQgZm9yIGFuIHVuZGVyc2VhIGFkdmVudHVyZSB0byByZXNjdWUgaGVyIG1vdGhlciwgdGhlIHF1ZWVuIG9mIE9jZWFuYS4iLCJwb3B1bGFyaXR5IjoyOC42NTksInBvc3Rlcl9wYXRoIjoiL2p0T2xvM0FhWFZCbnFmTWVLR0ZyWlVNUEZ1aS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTAxLTI1IiwidGl0bGUiOiJCYXJiaWUgaW4gQSBNZXJtYWlkIFRhbGUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4yMTUsInZvdGVfY291bnQiOjY5OX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvd1dXWGQyN3lGOHNLOWJMZ0FENHp4aUdjWUpXLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE2XSwiaWQiOjQ0ODc0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWU6IEEgRmFzaGlvbiBGYWlyeXRhbGUiLCJvdmVydmlldyI6IkpvaW4gQmFyYmllIGluIGEgY29sb3VyZnVsLCBtb2Rlcm4tZGF5IGZhaXJ5dGFsZSBmaWxsZWQgd2l0aCBmYXNoaW9uLCBmcmllbmRzIGFuZCBmdW4hIEJhcmJpZSBhbmQgaGVyIGRvZyBTZXF1aW4gamV0IG9mZiB0byB2aXNpdCBoZXIgQXVudCdzIGFtYXppbmcgZmFzaGlvbiBob3VzZSBpbiBQYXJpcywgYW5kIG11Y2ggdG8gaGVyIHN1cnByaXNlIGl0J3MgYWJvdXQgdG8gYmUgc2h1dCBkb3duIGZvcmV2ZXIuIEFmdGVyIHNoZSBkaXNjb3ZlcnMgdGhyZWUgZW5jaGFudGluZyBGbGFpcmllcyB3aXRoIHNwYXJrbGUtbWFnaWMgcG93ZXJzLCBCYXJiaWUgY29tZXMgdXAgd2l0aCBhIGJyaWxsaWFudCBpZGVhIHRvIHNhdmUgdGhlIGJ1c2luZXNzLiBTaGUgZXZlbiBpbnNwaXJlcyBBbGljZSwgYSBzaHkgZmFzaGlvbiBkZXNpZ25lciwgYW5kIHRvZ2V0aGVyIHRoZXkgY3JlYXRlIGEgZGF6emxpbmcgcnVud2F5IGZhc2hpb24gc2hvdy4gQmFyYmllIHNob3dzIHRoYXQgbWFnaWMgaGFwcGVucyB3aGVuIHlvdSBiZWxpZXZlIGluIHlvdXJzZWxmLiIsInBvcHVsYXJpdHkiOjMwLjc0NiwicG9zdGVyX3BhdGgiOiIvYkZuZjhmOERYZENBTlE3WTYyZGpndWJoaDRQLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMDktMTQiLCJ0aXRsZSI6IkJhcmJpZTogQSBGYXNoaW9uIEZhaXJ5dGFsZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjE4Mywidm90ZV9jb3VudCI6NzA2fV0sInRvdGFsX3BhZ2VzIjoxMCwidG90YWxfcmVzdWx0cyI6MTkzfQ==
  recorded_at: Mon, 30 Oct 2023 04:03:04 GMT
recorded_with: VCR 6.2.0
